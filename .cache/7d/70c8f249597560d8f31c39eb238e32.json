{"id":"EPCX","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/auditTime.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/auditTime.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../scheduler/async","loc":{"line":2,"column":22},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/auditTime.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/scheduler/async.js"},{"name":"./audit","loc":{"line":3,"column":22},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/auditTime.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/audit.js"},{"name":"../observable/timer","loc":{"line":4,"column":22},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/auditTime.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/timer.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.auditTime=i;var e=require(\"../scheduler/async\"),r=require(\"./audit\"),t=require(\"../observable/timer\");function i(i,u){return void 0===u&&(u=e.async),(0,r.audit)(function(){return(0,t.timer)(i,u)})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":1,"column":145}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":1,"column":147}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":1,"column":155}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":55,"column":47},"generated":{"line":1,"column":178}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":55,"column":47},"generated":{"line":1,"column":187}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":55,"column":47},"generated":{"line":1,"column":189}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":55,"column":47},"generated":{"line":1,"column":191}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":194}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":1,"column":206}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":1,"column":210}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":214}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":216}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":218}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":226}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":228}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":230}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":237}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":248}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":255}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":257}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":259}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":266}},{"source":"../../../src/internal/operators/auditTime.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":1,"column":268}}],"sources":{"../../../src/internal/operators/auditTime.ts":"import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { auditTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n"},"lineCount":null}},"error":null,"hash":"1e1a266f73392f8a8e6c099ec8f3be25","cacheData":{"env":{}}}