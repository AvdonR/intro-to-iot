{"id":"qejb","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/canReportError.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/util/canReportError.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../Subscriber","loc":{"line":2,"column":27},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/canReportError.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Subscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.canReportError=e;var r=require(\"../Subscriber\");function e(e){for(;e;){var t=e,o=t.closed,i=t.destination,n=t.isStopped;if(o||n)return!1;e=i&&i instanceof r.Subscriber?i:null}return!0}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":91}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":99}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":107}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":1,"column":124}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":1,"column":133}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":1,"column":135}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":1,"column":138}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":1,"column":143}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":1,"column":146}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":1,"column":147}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":1,"column":151}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":1,"column":153}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":18},"generated":{"line":1,"column":155}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":157}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":159}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":166}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":168}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":170}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":182}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":184}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":1,"column":186}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":1,"column":196}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":1,"column":199}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":14,"column":18},"generated":{"line":1,"column":202}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":15,"column":5},"generated":{"line":1,"column":204}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":15,"column":5},"generated":{"line":1,"column":211}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":1,"column":213}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":215}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":1,"column":218}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":16,"column":29},"generated":{"line":1,"column":231}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":233}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":1,"column":244}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":19,"column":5},"generated":{"line":1,"column":246}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":251}},{"source":"../../../src/internal/util/canReportError.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":1,"column":258}}],"sources":{"../../../src/internal/util/canReportError.ts":"import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n"},"lineCount":null}},"error":null,"hash":"c7028fa581ffa82f7ab0046dfd3ecfdf","cacheData":{"env":{}}}