{"id":"kxwR","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/startWith.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/startWith.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../observable/concat","loc":{"line":2,"column":23},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/startWith.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/concat.js"},{"name":"../util/isScheduler","loc":{"line":3,"column":28},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/startWith.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/isScheduler.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.startWith=t;var e=require(\"../observable/concat\"),r=require(\"../util/isScheduler\");function t(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var u=t[t.length-1];return(0,r.isScheduler)(u)?(t.pop(),function(r){return(0,e.concat)(t,r,u)}):function(r){return(0,e.concat)(t,r)}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":1,"column":136}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":159}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":168}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":172}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":176}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":180}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":182}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":185}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":187}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":189}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":1,"column":191}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":1,"column":201}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":1,"column":208}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":212}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":214}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":217}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":227}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":1,"column":230}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":1,"column":234}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":1,"column":236}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":1,"column":238}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":30},"generated":{"line":1,"column":240}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":30},"generated":{"line":1,"column":247}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":1,"column":250}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":1,"column":257}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":1,"column":259}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":1,"column":261}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":1,"column":274}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":1,"column":278}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":1,"column":280}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":286}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":295}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":298}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":305}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":307}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":309}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":317}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":319}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":1,"column":321}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":326}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":335}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":338}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":345}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":347}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":349}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":357}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":1,"column":359}}],"sources":{"../../../src/internal/operators/startWith.ts":"import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D>(v1: D, scheduler: SchedulerLike): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E>(v1: D, v2: E, scheduler: SchedulerLike): OperatorFunction<T, T | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\n\nexport function startWith<T, D>(v1: D): OperatorFunction<T, T | D>;\nexport function startWith<T, D, E>(v1: D, v2: E): OperatorFunction<T, T | D | E>;\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F): OperatorFunction<T, T | D | E | F>;\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G): OperatorFunction<T, T | D | E | F | G>;\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H): OperatorFunction<T, T | D | E | F | G | H>;\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I): OperatorFunction<T, T | D | E | F | G | H | I>;\nexport function startWith<T, D = T>(...array: D[]): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Start the chain of emissions with `\"first\"`, `\"second\"`\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * of(\"from source\")\n *   .pipe(startWith(\"first\", \"second\"))\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * //   \"first\"\n * //   \"second\"\n * //   \"from source\"\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\n  const scheduler = array[array.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    // deprecated path\n    array.pop();\n    return (source: Observable<T>) => concat(array as T[], source, scheduler);\n  } else {\n    return (source: Observable<T>) => concat(array as T[], source);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"3e613e4f92974554fdbaa0a23b767149","cacheData":{"env":{}}}