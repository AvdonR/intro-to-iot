{"id":"YBSi","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/using.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/observable/using.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../Observable","loc":{"line":2,"column":27},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/using.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Observable.js"},{"name":"./from","loc":{"line":3,"column":21},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/using.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/from.js"},{"name":"./empty","loc":{"line":4,"column":22},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/using.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/empty.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.using=t;var r=require(\"../Observable\"),e=require(\"./from\"),u=require(\"./empty\");function t(t,n){return new r.Observable(function(r){var i,s;try{i=t()}catch(c){return void r.error(c)}try{s=n(i)}catch(c){return void r.error(c)}var o=(s?(0,e.from)(s):u.EMPTY).subscribe(r);return function(){o.unsubscribe(),i&&i.unsubscribe()}})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":82}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":115}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":117}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":125}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":1,"column":135}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":1,"column":137}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":1,"column":145}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":1,"column":156}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":1,"column":165}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":1,"column":167}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":36,"column":27},"generated":{"line":1,"column":169}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":172}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":179}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":1,"column":183}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":1,"column":185}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":40},"generated":{"line":1,"column":196}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":37,"column":40},"generated":{"line":1,"column":205}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":39,"column":8},"generated":{"line":1,"column":208}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":39,"column":8},"generated":{"line":1,"column":212}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":1,"column":214}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":40,"column":6},"generated":{"line":1,"column":216}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":41,"column":5},"generated":{"line":1,"column":220}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":41,"column":5},"generated":{"line":1,"column":222}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":1,"column":226}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":42,"column":6},"generated":{"line":1,"column":232}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":44,"column":5},"generated":{"line":1,"column":235}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":1,"column":247}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":43,"column":13},"generated":{"line":1,"column":249}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":43,"column":23},"generated":{"line":1,"column":255}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":258}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":49,"column":5},"generated":{"line":1,"column":262}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":49,"column":5},"generated":{"line":1,"column":264}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":49,"column":5},"generated":{"line":1,"column":266}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":1,"column":269}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":1,"column":275}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":52,"column":5},"generated":{"line":1,"column":278}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":1,"column":290}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":1,"column":292}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":51,"column":23},"generated":{"line":1,"column":298}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":1,"column":301}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":1,"column":305}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":1,"column":308}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":25},"generated":{"line":1,"column":311}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":32},"generated":{"line":1,"column":313}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":32},"generated":{"line":1,"column":315}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":32},"generated":{"line":1,"column":321}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":42},"generated":{"line":1,"column":324}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":1,"column":326}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":1,"column":333}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":1,"column":343}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":1,"column":346}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":1,"column":353}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":1,"column":364}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":1,"column":366}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":1,"column":380}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":60,"column":7},"generated":{"line":1,"column":383}},{"source":"../../../src/internal/observable/using.ts","name":null,"original":{"line":60,"column":7},"generated":{"line":1,"column":385}}],"sources":{"../../../src/internal/observable/using.ts":"import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"bd9e25ad092f4e84ab26b8b073ffa836","cacheData":{"env":{}}}