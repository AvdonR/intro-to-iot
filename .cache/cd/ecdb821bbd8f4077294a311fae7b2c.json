{"id":"D0Cm","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/merge.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/merge.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../observable/merge","loc":{"line":2,"column":37},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/merge.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/merge.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.merge=r;var e=require(\"../observable/merge\");function r(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return function(t){return t.lift.call(e.merge.apply(void 0,[t].concat(r)))}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":82}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":121}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":130}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":134}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":96},"generated":{"line":1,"column":138}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":96},"generated":{"line":1,"column":142}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":144}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":147}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":149}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":151}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":153}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":1,"column":163}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":39,"column":96},"generated":{"line":1,"column":170}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":174}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":176}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":179}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":189}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":192}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":199}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":208}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":211}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":218}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":220}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":225}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":230}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":232}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":238}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":249}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":251}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":252}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":255}},{"source":"../../../src/internal/operators/merge.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":1,"column":262}}],"sources":{"../../../src/internal/operators/merge.ts":"import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link merge}.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n"},"lineCount":null}},"error":null,"hash":"2b6da8c6185f00bacd346529a4d6be96","cacheData":{"env":{}}}