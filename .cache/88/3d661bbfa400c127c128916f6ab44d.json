{"id":"ahHl","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/isNumeric.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/util/isNumeric.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"./isArray","loc":{"line":2,"column":24},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/isNumeric.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/isArray.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isNumeric=e;var r=require(\"./isArray\");function e(e){return!(0,r.isArray)(e)&&e-parseFloat(e)+1>=0}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":1,"column":115}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":1,"column":124}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":1,"column":126}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":129}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":137}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":139}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":141}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":150}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":154}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":156}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":167}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":170}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":1,"column":173}}],"sources":{"../../../src/internal/util/isNumeric.ts":"import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n"},"lineCount":null}},"error":null,"hash":"df7a43c61c627e8367b304040dbed658","cacheData":{"env":{}}}