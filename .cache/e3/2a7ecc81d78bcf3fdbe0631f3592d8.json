{"id":"gw6m","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/race.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/race.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util/isArray","loc":{"line":2,"column":24},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/race.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/isArray.js"},{"name":"../observable/race","loc":{"line":3,"column":35},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/race.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/race.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.race=t;var r=require(\"../util/isArray\"),e=require(\"../observable/race\");function t(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];return function(a){return 1===t.length&&(0,r.isArray)(t[0])&&(t=t[0]),a.lift.call(e.race.apply(void 0,[a].concat(t)))}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":81}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":83}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":87}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":148}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":157}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":161}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":75},"generated":{"line":1,"column":165}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":75},"generated":{"line":1,"column":169}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":171}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":174}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":176}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":178}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":180}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":190}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":26,"column":75},"generated":{"line":1,"column":197}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":201}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":203}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":206}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":216}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":1,"column":219}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":1,"column":226}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":30,"column":36},"generated":{"line":1,"column":235}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":238}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":20},"generated":{"line":1,"column":245}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":249}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":251}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":53},"generated":{"line":1,"column":260}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":54},"generated":{"line":1,"column":262}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":54},"generated":{"line":1,"column":264}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":54},"generated":{"line":1,"column":273}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":31,"column":54},"generated":{"line":1,"column":275}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":32,"column":5},"generated":{"line":1,"column":281}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":32,"column":5},"generated":{"line":1,"column":283}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":32,"column":5},"generated":{"line":1,"column":285}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":289}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":291}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":296}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":301}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":303}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":308}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":319}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":321}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":322}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":325}},{"source":"../../../src/internal/operators/race.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":1,"column":332}}],"sources":{"../../../src/internal/operators/race.ts":"import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n * @deprecated Deprecated in favor of static {@link race}.\n */\nexport function race<T>(...observables: (Observable<T> | Observable<T>[])[]): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0] as Observable<T>[];\n    }\n\n    return source.lift.call(raceStatic(source, ...(observables as Observable<T>[])));\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"9ac13c28dfbd922061f8bc466697f0bb","cacheData":{"env":{}}}