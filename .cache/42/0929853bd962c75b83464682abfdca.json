{"id":"VgUn","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"./distinctUntilChanged","loc":{"line":2,"column":37},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.distinctUntilKeyChanged=e;var t=require(\"./distinctUntilChanged\");function e(e,n){return(0,t.distinctUntilChanged)(function(t,i){return n?n(t[e],i[e]):t[e]===i[e]})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":100}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":1,"column":106}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":1,"column":108}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":1,"column":142}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":80,"column":9},"generated":{"line":1,"column":151}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":80,"column":30},"generated":{"line":1,"column":153}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":80,"column":37},"generated":{"line":1,"column":155}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":158}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":165}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":167}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":169}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":191}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":200}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":202}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":205}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":212}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":214}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":216}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":218}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":221}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":223}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":227}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":229}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":234}},{"source":"../../../src/internal/operators/distinctUntilKeyChanged.ts","name":null,"original":{"line":81,"column":1},"generated":{"line":1,"column":236}}],"sources":{"../../../src/internal/operators/distinctUntilKeyChanged.ts":"import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n * An example comparing the name of persons\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name'),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3)),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n"},"lineCount":null}},"error":null,"hash":"763199509edde0925debbe20fa866052","cacheData":{"env":{}}}