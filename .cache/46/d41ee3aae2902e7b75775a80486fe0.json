{"id":"eFXA","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/toArray.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/toArray.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"./reduce","loc":{"line":2,"column":23},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/toArray.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/reduce.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.toArray=t;var e=require(\"./reduce\");function r(e,r,t){return 0===t?[r]:(e.push(r),e)}function t(){return(0,e.reduce)(r,[])}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":84}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":1,"column":112}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":1,"column":121}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":1,"column":123}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":1,"column":125}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":1,"column":127}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":1,"column":130}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":6,"column":12},"generated":{"line":1,"column":137}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":1,"column":141}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":7,"column":3},"generated":{"line":1,"column":143}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":7,"column":3},"generated":{"line":1,"column":144}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":1,"column":148}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":1,"column":150}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":1,"column":155}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":10,"column":1},"generated":{"line":1,"column":158}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":161}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":170}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":174}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":181}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":183}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":185}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":193}},{"source":"../../../src/internal/operators/toArray.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":1,"column":195}}],"sources":{"../../../src/internal/operators/toArray.ts":"import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n *  ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { toArray, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n *\n * ```\n* @return An array from an observable sequence.\n* @method toArray\n* @owner Observable\n*/\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, [] as T[]);\n}\n"},"lineCount":null}},"error":null,"hash":"ddc778444d11cf7d674dd78a71bf7bd2","cacheData":{"env":{}}}