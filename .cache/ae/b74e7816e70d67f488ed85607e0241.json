{"id":"c2Vo","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Observable.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/Observable.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"./util/canReportError","loc":{"line":2,"column":31},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/canReportError.js"},{"name":"./util/toSubscriber","loc":{"line":3,"column":29},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/toSubscriber.js"},{"name":"./symbol/observable","loc":{"line":4,"column":48},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/symbol/observable.js"},{"name":"./util/pipe","loc":{"line":5,"column":30},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/pipe.js"},{"name":"./config","loc":{"line":6,"column":23},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/Observable.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/config.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Observable=void 0;var r=require(\"./util/canReportError\"),e=require(\"./util/toSubscriber\"),o=require(\"./symbol/observable\"),t=require(\"./util/pipe\"),n=require(\"./config\"),i=function(){function i(r){this._isScalar=!1,r&&(this._subscribe=r)}return i.prototype.lift=function(r){var e=new i;return e.source=this,e.operator=r,e},i.prototype.subscribe=function(r,o,t){var i=this.operator,s=(0,e.toSubscriber)(r,o,t);if(i?s.add(i.call(s,this.source)):s.add(this.source||n.config.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),n.config.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},i.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(o){n.config.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=o),(0,r.canReportError)(e)?e.error(o):console.warn(o)}},i.prototype.forEach=function(r,e){var o=this;return new(e=s(e))(function(e,t){var n;n=o.subscribe(function(e){try{r(e)}catch(o){t(o),n&&n.unsubscribe()}},t,e)})},i.prototype._subscribe=function(r){var e=this.source;return e&&e.subscribe(r)},i.prototype[o.observable]=function(){return this},i.prototype.pipe=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return 0===r.length?this:(0,t.pipeFromArray)(r)(this)},i.prototype.toPromise=function(r){var e=this;return new(r=s(r))(function(r,o){var t;e.subscribe(function(r){return t=r},function(r){return o(r)},function(){return r(t)})})},i.create=function(r){return new i(r)},i}();function s(r){if(r||(r=n.config.Promise||Promise),!r)throw new Error(\"no Promise impl found\");return r}exports.Observable=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":92}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":94}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":98}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":100}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":108}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":133}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":135}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":143}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":166}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":168}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":176}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":199}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":201}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":209}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":224}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":226}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":234}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":1,"column":246}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":1,"column":248}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":1,"column":259}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":1,"column":268}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":270}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":1,"column":273}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":1,"column":278}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":1,"column":289}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":291}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":295}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":300}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":1,"column":311}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":363,"column":1},"generated":{"line":1,"column":314}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":1,"column":321}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":1,"column":323}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":23},"generated":{"line":1,"column":333}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":27},"generated":{"line":1,"column":338}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":67,"column":43},"generated":{"line":1,"column":347}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":350}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":354}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":68,"column":21},"generated":{"line":1,"column":356}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":68,"column":24},"generated":{"line":1,"column":360}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":71,"column":3},"generated":{"line":1,"column":362}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":1,"column":369}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":15},"generated":{"line":1,"column":371}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":23},"generated":{"line":1,"column":378}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":1,"column":383}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":11},"generated":{"line":1,"column":385}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":22},"generated":{"line":1,"column":394}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":71,"column":3},"generated":{"line":1,"column":396}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":12},"generated":{"line":1,"column":399}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":12},"generated":{"line":1,"column":401}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":12},"generated":{"line":1,"column":411}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":30},"generated":{"line":1,"column":421}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":30},"generated":{"line":1,"column":430}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":30},"generated":{"line":1,"column":432}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":210,"column":30},"generated":{"line":1,"column":434}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":211,"column":10},"generated":{"line":1,"column":437}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":211,"column":10},"generated":{"line":1,"column":441}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":211,"column":17},"generated":{"line":1,"column":443}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":211,"column":17},"generated":{"line":1,"column":448}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":8},"generated":{"line":1,"column":457}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":8},"generated":{"line":1,"column":460}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":18},"generated":{"line":1,"column":462}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":18},"generated":{"line":1,"column":464}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":18},"generated":{"line":1,"column":478}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":18},"generated":{"line":1,"column":480}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":18},"generated":{"line":1,"column":482}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":224,"column":6},"generated":{"line":1,"column":485}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":214,"column":6},"generated":{"line":1,"column":488}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":5},"generated":{"line":1,"column":490}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":5},"generated":{"line":1,"column":492}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":5},"generated":{"line":1,"column":496}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":5},"generated":{"line":1,"column":498}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":5},"generated":{"line":1,"column":503}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":5},"generated":{"line":1,"column":505}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":5},"generated":{"line":1,"column":510}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":8},"generated":{"line":1,"column":519}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":8},"generated":{"line":1,"column":521}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":13},"generated":{"line":1,"column":525}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":13},"generated":{"line":1,"column":530}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":29},"generated":{"line":1,"column":538}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":31},"generated":{"line":1,"column":540}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":31},"generated":{"line":1,"column":547}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":31},"generated":{"line":1,"column":587}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":218,"column":31},"generated":{"line":1,"column":589}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":8},"generated":{"line":1,"column":608}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":13},"generated":{"line":1,"column":613}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":13},"generated":{"line":1,"column":624}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":221,"column":5},"generated":{"line":1,"column":627}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":221,"column":5},"generated":{"line":1,"column":632}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":221,"column":5},"generated":{"line":1,"column":646}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":224,"column":6},"generated":{"line":1,"column":650}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":224,"column":10},"generated":{"line":1,"column":652}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":224,"column":10},"generated":{"line":1,"column":659}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":225,"column":8},"generated":{"line":1,"column":698}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":225,"column":13},"generated":{"line":1,"column":700}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":226,"column":8},"generated":{"line":1,"column":721}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":226,"column":12},"generated":{"line":1,"column":723}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":226,"column":34},"generated":{"line":1,"column":743}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":10},"generated":{"line":1,"column":745}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":10},"generated":{"line":1,"column":747}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":228,"column":9},"generated":{"line":1,"column":764}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":228,"column":9},"generated":{"line":1,"column":770}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":228,"column":9},"generated":{"line":1,"column":772}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":233,"column":3},"generated":{"line":1,"column":787}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":233,"column":3},"generated":{"line":1,"column":794}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":237,"column":8},"generated":{"line":1,"column":797}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":237,"column":8},"generated":{"line":1,"column":799}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":237,"column":8},"generated":{"line":1,"column":809}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":237,"column":8},"generated":{"line":1,"column":823}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":237,"column":8},"generated":{"line":1,"column":832}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":238,"column":6},"generated":{"line":1,"column":835}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":239,"column":5},"generated":{"line":1,"column":839}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":239,"column":5},"generated":{"line":1,"column":846}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":239,"column":5},"generated":{"line":1,"column":851}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":239,"column":5},"generated":{"line":1,"column":862}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":240,"column":6},"generated":{"line":1,"column":865}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":240,"column":6},"generated":{"line":1,"column":871}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":241,"column":8},"generated":{"line":1,"column":874}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":241,"column":13},"generated":{"line":1,"column":876}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":241,"column":13},"generated":{"line":1,"column":883}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":242,"column":8},"generated":{"line":1,"column":923}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":242,"column":13},"generated":{"line":1,"column":925}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":242,"column":30},"generated":{"line":1,"column":942}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":243,"column":7},"generated":{"line":1,"column":944}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":243,"column":7},"generated":{"line":1,"column":946}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":243,"column":7},"generated":{"line":1,"column":961}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":8},"generated":{"line":1,"column":965}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":23},"generated":{"line":1,"column":967}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":23},"generated":{"line":1,"column":969}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":23},"generated":{"line":1,"column":985}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":7},"generated":{"line":1,"column":988}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":7},"generated":{"line":1,"column":990}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":7},"generated":{"line":1,"column":996}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":7},"generated":{"line":1,"column":999}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":7},"generated":{"line":1,"column":1007}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":7},"generated":{"line":1,"column":1012}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":259,"column":2},"generated":{"line":1,"column":1017}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":259,"column":2},"generated":{"line":1,"column":1019}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":277,"column":3},"generated":{"line":1,"column":1029}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":277,"column":3},"generated":{"line":1,"column":1037}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":277,"column":3},"generated":{"line":1,"column":1046}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":277,"column":3},"generated":{"line":1,"column":1048}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":260,"column":4},"generated":{"line":1,"column":1051}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":260,"column":4},"generated":{"line":1,"column":1055}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":260,"column":15},"generated":{"line":1,"column":1057}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":265,"column":6},"generated":{"line":1,"column":1062}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":265,"column":6},"generated":{"line":1,"column":1069}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":262,"column":4},"generated":{"line":1,"column":1073}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":262,"column":15},"generated":{"line":1,"column":1075}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":262,"column":33},"generated":{"line":1,"column":1077}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":265,"column":37},"generated":{"line":1,"column":1081}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":265,"column":37},"generated":{"line":1,"column":1090}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":265,"column":37},"generated":{"line":1,"column":1092}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":266,"column":6},"generated":{"line":1,"column":1095}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":266,"column":6},"generated":{"line":1,"column":1099}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1101}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1103}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1105}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1115}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":12},"generated":{"line":1,"column":1124}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":268,"column":10},"generated":{"line":1,"column":1127}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":269,"column":9},"generated":{"line":1,"column":1131}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":269,"column":9},"generated":{"line":1,"column":1133}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":270,"column":10},"generated":{"line":1,"column":1136}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":270,"column":10},"generated":{"line":1,"column":1142}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":271,"column":10},"generated":{"line":1,"column":1145}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":271,"column":14},"generated":{"line":1,"column":1147}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":272,"column":12},"generated":{"line":1,"column":1150}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":273,"column":11},"generated":{"line":1,"column":1153}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":273,"column":11},"generated":{"line":1,"column":1155}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":276,"column":24},"generated":{"line":1,"column":1171}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":276,"column":24},"generated":{"line":1,"column":1173}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":12},"generated":{"line":1,"column":1179}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":12},"generated":{"line":1,"column":1181}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":12},"generated":{"line":1,"column":1191}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":28},"generated":{"line":1,"column":1202}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":28},"generated":{"line":1,"column":1211}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":282,"column":4},"generated":{"line":1,"column":1214}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":282,"column":4},"generated":{"line":1,"column":1218}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":282,"column":17},"generated":{"line":1,"column":1220}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":282,"column":21},"generated":{"line":1,"column":1225}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":283,"column":3},"generated":{"line":1,"column":1232}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":283,"column":3},"generated":{"line":1,"column":1239}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":283,"column":3},"generated":{"line":1,"column":1242}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":283,"column":3},"generated":{"line":1,"column":1244}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":283,"column":3},"generated":{"line":1,"column":1254}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":304,"column":4},"generated":{"line":1,"column":1258}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":304,"column":11},"generated":{"line":1,"column":1260}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":304,"column":16},"generated":{"line":1,"column":1270}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":304,"column":16},"generated":{"line":1,"column":1272}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":304,"column":16},"generated":{"line":1,"column":1284}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":305,"column":3},"generated":{"line":1,"column":1295}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":305,"column":3},"generated":{"line":1,"column":1302}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1308}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1310}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1320}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":50},"generated":{"line":1,"column":1325}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1336}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1340}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1344}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1346}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1349}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1351}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1353}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1355}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":7},"generated":{"line":1,"column":1365}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":341,"column":50},"generated":{"line":1,"column":1372}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1376}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1378}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1381}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1391}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":343,"column":6},"generated":{"line":1,"column":1394}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":343,"column":25},"generated":{"line":1,"column":1401}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":343,"column":6},"generated":{"line":1,"column":1405}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":343,"column":24},"generated":{"line":1,"column":1407}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":344,"column":5},"generated":{"line":1,"column":1414}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1420}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1422}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1424}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1439}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1441}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":347,"column":3},"generated":{"line":1,"column":1442}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1449}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1451}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":362,"column":3},"generated":{"line":1,"column":1461}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":362,"column":3},"generated":{"line":1,"column":1471}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":362,"column":3},"generated":{"line":1,"column":1480}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":356,"column":4},"generated":{"line":1,"column":1483}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":356,"column":4},"generated":{"line":1,"column":1487}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":356,"column":15},"generated":{"line":1,"column":1489}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":359,"column":6},"generated":{"line":1,"column":1494}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":359,"column":6},"generated":{"line":1,"column":1501}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":4},"generated":{"line":1,"column":1505}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":15},"generated":{"line":1,"column":1507}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":27},"generated":{"line":1,"column":1509}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":359,"column":21},"generated":{"line":1,"column":1513}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":359,"column":21},"generated":{"line":1,"column":1522}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":359,"column":21},"generated":{"line":1,"column":1524}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":360,"column":6},"generated":{"line":1,"column":1527}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":360,"column":6},"generated":{"line":1,"column":1531}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1533}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1535}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1545}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1554}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1557}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1564}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1566}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1569}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1578}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1581}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1588}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1590}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1594}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1605}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1612}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":21},"generated":{"line":1,"column":1614}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":1,"column":1622}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":1,"column":1624}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":1,"column":1631}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":56,"column":29},"generated":{"line":1,"column":1640}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":57,"column":3},"generated":{"line":1,"column":1643}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":57,"column":3},"generated":{"line":1,"column":1650}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":57,"column":3},"generated":{"line":1,"column":1654}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":57,"column":3},"generated":{"line":1,"column":1656}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":363,"column":1},"generated":{"line":1,"column":1660}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":1,"column":1662}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":373,"column":7},"generated":{"line":1,"column":1665}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":373,"column":7},"generated":{"line":1,"column":1674}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":373,"column":20},"generated":{"line":1,"column":1676}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":378,"column":4},"generated":{"line":1,"column":1679}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":374,"column":4},"generated":{"line":1,"column":1682}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":375,"column":3},"generated":{"line":1,"column":1686}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":375,"column":3},"generated":{"line":1,"column":1688}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":375,"column":3},"generated":{"line":1,"column":1690}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":375,"column":3},"generated":{"line":1,"column":1697}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":375,"column":3},"generated":{"line":1,"column":1706}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":378,"column":4},"generated":{"line":1,"column":1716}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":3},"generated":{"line":1,"column":1718}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":3},"generated":{"line":1,"column":1724}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":3},"generated":{"line":1,"column":1728}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":3},"generated":{"line":1,"column":1734}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1759}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1766}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1768}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1776}},{"source":"../../src/internal/Observable.ts","name":null,"original":{"line":382,"column":1},"generated":{"line":1,"column":1787}}],"sources":{"../../src/internal/Observable.ts":"import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n"},"lineCount":null}},"error":null,"hash":"050f09d7d4652ec307726b92cbabae75","cacheData":{"env":{}}}