{"id":"asbR","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/publishLast.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/publishLast.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../AsyncSubject","loc":{"line":2,"column":29},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/publishLast.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/AsyncSubject.js"},{"name":"./multicast","loc":{"line":3,"column":26},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/publishLast.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/multicast.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.publishLast=r;var e=require(\"../AsyncSubject\"),t=require(\"./multicast\");function r(){return function(r){return(0,t.multicast)(new e.AsyncSubject)(r)}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":1,"column":123}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":1,"column":125}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":1,"column":133}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":1,"column":148}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":1,"column":157}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":161}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":168}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":177}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":180}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":187}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":189}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":191}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":202}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":206}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":208}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":221}},{"source":"../../../src/internal/operators/publishLast.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":1,"column":222}}],"sources":{"../../../src/internal/operators/publishLast.ts":"import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { publishLast, tap, take } from 'rxjs/operators';\n *\n * const connectable =\n *   interval(1000)\n *     .pipe(\n *       tap(x => console.log(\"side effect\", x)),\n *       take(3),\n *       publishLast());\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. A\", x),\n *   err => console.log(\"Sub. A Error\", err),\n *   () => console.log( \"Sub. A Complete\"));\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. B\", x),\n *   err => console.log(\"Sub. B Error\", err),\n *   () => console.log( \"Sub. B Complete\"));\n *\n * connectable.connect();\n *\n * // Results:\n * //    \"side effect 0\"\n * //    \"side effect 1\"\n * //    \"side effect 2\"\n * //    \"Sub. A 2\"\n * //    \"Sub. B 2\"\n * //    \"Sub. A Complete\"\n * //    \"Sub. B Complete\"\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return {ConnectableObservable} An observable sequence that contains the elements of a\n * sequence produced by multicasting the source sequence.\n * @method publishLast\n * @owner Observable\n */\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n"},"lineCount":null}},"error":null,"hash":"5921f126d03741bd026641f4379b3538","cacheData":{"env":{}}}