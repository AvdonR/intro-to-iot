{"id":"Id3u","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/first.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/operators/first.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util/EmptyError","loc":{"line":2,"column":27},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/first.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/EmptyError.js"},{"name":"./filter","loc":{"line":3,"column":23},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/first.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/filter.js"},{"name":"./take","loc":{"line":4,"column":21},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/first.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/take.js"},{"name":"./defaultIfEmpty","loc":{"line":5,"column":31},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/first.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js"},{"name":"./throwIfEmpty","loc":{"line":6,"column":29},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/first.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js"},{"name":"../util/identity","loc":{"line":7,"column":25},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/operators/first.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/identity.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.first=f;var r=require(\"../util/EmptyError\"),e=require(\"./filter\"),t=require(\"./take\"),i=require(\"./defaultIfEmpty\"),u=require(\"./throwIfEmpty\"),n=require(\"../util/identity\");function f(f,o){var p=arguments.length>=2;return function(l){return l.pipe(f?(0,e.filter)(function(r,e){return f(r,e,l)}):n.identity,(0,t.take)(1),p?(0,i.defaultIfEmpty)(o):(0,u.throwIfEmpty)(function(){return new r.EmptyError}))}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":82}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":122}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":130}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":142}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":152}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":162}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":164}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":172}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":192}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":194}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":202}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":81,"column":0},"generated":{"line":1,"column":220}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":81,"column":0},"generated":{"line":1,"column":222}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":81,"column":0},"generated":{"line":1,"column":230}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":250}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":85,"column":8},"generated":{"line":1,"column":259}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":85,"column":8},"generated":{"line":1,"column":261}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":1,"column":263}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":266}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":270}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":86,"column":10},"generated":{"line":1,"column":272}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":86,"column":36},"generated":{"line":1,"column":282}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":86,"column":43},"generated":{"line":1,"column":290}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":292}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":299}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":308}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":311}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":318}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":320}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":325}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":328}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":330}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":332}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":340}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":349}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":351}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":354}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":361}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":363}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":365}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":367}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":372}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":374}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":384}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":386}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":388}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":394}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":397}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":400}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":402}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":404}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":420}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":424}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":426}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":428}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":442}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":453}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":460}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":464}},{"source":"../../../src/internal/operators/first.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":466}}],"sources":{"../../../src/internal/operators/first.ts":"import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function first<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a deprecated `resultSelector` function to produce the output\n * value from the input value, and a `defaultValue` to emit in case the source\n * completes before it is able to emit a valid value. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n * Emit only the first click that happens on the DOM\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    take(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"946976c9b829e09bbca162aba8ea72b8","cacheData":{"env":{}}}