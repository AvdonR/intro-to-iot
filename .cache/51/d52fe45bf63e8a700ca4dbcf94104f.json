{"id":"Nlwk","dependencies":[{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/of.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/src/internal/observable/of.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/package.json","includedInParent":true,"mtime":1607036704212},{"name":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util/isScheduler","loc":{"line":2,"column":28},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/of.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/util/isScheduler.js"},{"name":"./fromArray","loc":{"line":3,"column":26},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/of.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/fromArray.js"},{"name":"../scheduled/scheduleArray","loc":{"line":4,"column":30},"parent":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/observable/of.js","resolved":"/Users/avdonr/Documents/GitHub/intro-to-iot/node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.of=t;var e=require(\"../util/isScheduler\"),r=require(\"./fromArray\"),u=require(\"../scheduled/scheduleArray\");function t(){for(var t=[],l=0;l<arguments.length;l++)t[l]=arguments[l];var o=t[t.length-1];return(0,e.isScheduler)(o)?(t.pop(),(0,u.scheduleArray)(t,o)):(0,r.fromArray)(t)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":79}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":81}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":85}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":87}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":0},"generated":{"line":1,"column":143}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":0},"generated":{"line":1,"column":145}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":0},"generated":{"line":1,"column":153}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":183}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":192}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":196}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":200}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":204}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":206}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":209}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":211}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":213}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":22},"generated":{"line":1,"column":215}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":55},"generated":{"line":1,"column":225}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":102,"column":55},"generated":{"line":1,"column":232}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":236}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":238}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":241}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":110,"column":1},"generated":{"line":1,"column":251}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":104,"column":6},"generated":{"line":1,"column":254}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":104,"column":6},"generated":{"line":1,"column":258}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":104,"column":18},"generated":{"line":1,"column":260}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":104,"column":18},"generated":{"line":1,"column":262}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":104,"column":28},"generated":{"line":1,"column":264}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":104,"column":30},"generated":{"line":1,"column":271}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":1,"column":274}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":1,"column":281}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":105,"column":15},"generated":{"line":1,"column":283}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":105,"column":15},"generated":{"line":1,"column":285}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":105,"column":15},"generated":{"line":1,"column":298}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":106,"column":4},"generated":{"line":1,"column":302}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":106,"column":4},"generated":{"line":1,"column":304}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":107,"column":3},"generated":{"line":1,"column":311}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":107,"column":3},"generated":{"line":1,"column":313}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":107,"column":3},"generated":{"line":1,"column":315}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":107,"column":3},"generated":{"line":1,"column":330}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":107,"column":3},"generated":{"line":1,"column":332}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":109,"column":3},"generated":{"line":1,"column":337}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":109,"column":3},"generated":{"line":1,"column":339}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":109,"column":3},"generated":{"line":1,"column":341}},{"source":"../../../src/internal/observable/of.ts","name":null,"original":{"line":109,"column":3},"generated":{"line":1,"column":352}}],"sources":{"../../../src/internal/observable/of.ts":"import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"c57a3420e41fdb953c30bff7ebb39f4d","cacheData":{"env":{}}}